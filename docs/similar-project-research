### Research
*************************************************************************
https://github.com/WE-Bots/google-drive-permission-management

Description:

"This program will traverse all files and folders in Google Drive and add/remove
collaborators to ensure that the list matches a provided list of shared people.
For files owned by a different user, the file can be copied and the old file deleted."

Language(s):

Python

This project uses Python to interface with the Google API to allow file structure
traversal and permission management. The project also provides an example of how
to validate permissions by checking a file/folders shared people against a list
of who it should be shared with.

*************************************************************************
https://gist.github.com/soham2008xyz/0a29cdb68be216f3532a59f06ef52353

Description:

"When invoking the app, you will be shown the folder hierarchy of your Google Drive.
Clicking on a folder will display an ugly-looking popup, where you can choose to execute
a permission reset script for the folder and its subfolders (the function doResetPermissions
in the code). This function iterates through the folder and its subfolders. For each file it finds,
it executes file.setSharing with values from the parent folder. It also calls file.removeViewer for all
viewers registered, and file.removeEditor for all registered editors."

Language(s):

JavaScript

This project is just a single JavaSript script that resets the permissions of a given Google Drive Folder.

*************************************************************************
https://github.com/DominickDeJesus/gdrive-permission-script

Description:

"This script will add/remove edit permissions from a google drive file/folder given a list of emails.
This script is run through the command line."

Language(s):

JavaScript (NodeJS)

This project is just a single JavaSript script. It interfaces with the Google Drive API, and given a list
of emails can add or remove permissions on a file/folder. It only seems to work on a given file/folder path.

*************************************************************************
https://github.com/ginger-io/gdrive-audit

Description:

"GDrive-Audit is a permissions audit tool that traverses all the files in your business' Google Drive account
and generates a spreadsheet displaying file permissions."

Language(s):

Python

This could be a useful reference for file enumeration and permission checking.

*************************************************************************
https://github.com/magkopian/drivenote

Description:

"Drivenote is a permission management system for Google Drive shared folders. Its goal is to assist students
sharing their class notes securely, by granting access to a central shared folder only to verified students."

Language(s):

PHP
CSS
JavaScript

This is a fully fledged permission management system for Google Drive. It integrates with the current permission
management systems but with extended functionality for email validation.

*************************************************************************
https://github.com/Aoi-Erimiya/RevokePermissionsFromGoogleDrive

Description:

"Remove all permissions under the specified folder"

Languages(s):

JavaScript

This project is just a single JavaSript script. It interfaces with the Google Drive API, and given a folder
removes all permissions for the folder and its contents(including sub-directory's).

*************************************************************************
https://github.com/deltaray/cloudperm

Description:

"A set of programs that help you check, audit report and change roles and permissions on popular Cloud platforms.
Right now this is only for Google Drive/Docs."

"To automate the checking of access permissions on cloud file/document sharing platforms such as Google Drive and
alert the user of unexpected changes."

Language(s):

Python

This project continually audits roles and permissions on Google Drive. It can trigger a response on permission
changes. This implementation only uses this functionality for notifications.

*************************************************************************
https://github.com/dchemishanov/GDrive-Access-Monitor

Description:

"This script is based on the Google's quick start guide to Google Drive API:
https://developers.google.com/drive/v3/web/quickstart/python It uses the Oauth2 authentication mechanism and
modifies the api call for file metadata. Every other change is entirely my own. This script is developed as an
internal tool for Strypes EOOD https://www.strypes.eu, part of the Dutch Tech Cluster and is published for public reuse"

"The script is intended for companies that are trying to review the security of their files in the cloud and the unintended
exposure of sensitive information to the wider Internet. Paid services do exist, but they require administrative access to
the Google Drive which is unnecessary. The current script could be executed by any employee showing all public files and
those visible to the entire company. Obtaining your own credentials for authentication is necessary to run the script.
The script lists all visible files on Google Drive that have any public or domain-wide permissions. The report is returned
in a structured table that could be formatted in accordance with the user's needs. By default the results are sent to a
results.txt file in the current directory. If you want the raw table, use: from gdam import entries"

Language(s):

Python

This project is another example of a access monitoring using the Google Drive API. Could be useful for reference for putting infomration
gathered from the Google Drive API into a database.
